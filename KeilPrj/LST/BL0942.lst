C51 COMPILER V9.01   BL0942                                                                12/31/2024 16:06:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE BL0942
OBJECT MODULE PLACED IN .\OBJ\BL0942.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE ..\code\BL0942\BL0942.c BROWSE INCDIR(..\code\BL0942) DEBUG OBJECTEXTEND
                    - PRINT(.\LST\BL0942.lst) OBJECT(.\OBJ\BL0942.obj)

line level    source

   1          #include "./BL0942.H"  // SPI hỗ trợ max 900kHz
   2          
   3          /*
   4          void RD_Unlock_Send(void){
   5              uint8_t data_send[6] = {0};
   6              uint16_t CRC_Temp = (0xA8 + USR_WRPROT + 0x55);
   7              uint8_t CRC_Check = ~(CRC_Temp & 0xff);
   8              data_send[0] = 0xA8;
   9              data_send[1] = USR_WRPROT;
  10              data_send[2] = 0x00;
  11              data_send[3] = 0x00;
  12              data_send[4] = 0x55;
  13              data_send[5] = CRC_Check;
  14              RD_Send_String_SPI(data_send);
  15          }
  16          
  17          void RD_Write_Data(uint8_t reg_addr, uint8_t *data_w){
  18              uint8_t data_send[6] = {0};
  19              uint16_t CRC_Temp = 0xA8 + reg_addr + data_w[0] + data_w[1] + data_w[2];
  20              uint8_t CRC_Check = ~(CRC_Temp & 0xff);
  21              data_send[0] = 0xA8;
  22              data_send[1] = reg_addr;
  23              data_send[2] = data_w[0];
  24              data_send[3] = data_w[1];
  25              data_send[4] = data_w[2];
  26              data_send[5] = CRC_Check;
  27              RD_Send_String_SPI(data_send);
  28          }
  29          
  30          void RD_Read_Data_SPI(uint8_t reg_addr){
  31                  //uint8_t i = 0;
  32              //xdata uint8_t Buff_print[30];
  33              uint8_t *ptrRec;
  34              uint8_t rx_data[6] = {0};
  35              uint8_t tx_data[6] = {0};
  36              uint16_t CRC_Temp = 0x58 + reg_addr;
  37              uint8_t CRC_Check = ~(CRC_Temp & 0xff);
  38              tx_data[0] = 0x58;
  39              tx_data[1] = reg_addr;
  40              tx_data[2] = 0x00;
  41              tx_data[3] = 0x00;
  42              tx_data[4] = 0x00;
  43              tx_data[5] = CRC_Check;
  44              ptrRec = &rx_data[0]; 
  45              RD_Send_String_SPI(tx_data);
  46              while (GET_DATA_SPI()!= NULL)
  47              {
  48                 *ptrRec++ = GET_DATA_SPI();
  49              }
  50              
  51              rd_print("Data rec reg 0x%02X: ", reg_addr);
  52              for(i=0; i<6; i++){
  53                 rd_print("%d ", rx_data[0]);
  54              }
C51 COMPILER V9.01   BL0942                                                                12/31/2024 16:06:34 PAGE 2   

  55              rd_print("\n");  
  56          }
  57          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
